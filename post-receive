#!/bin/bash
while read oldrev newrev refname
do
    # branch
    #branch=$(git rev-parse --symbolic --abbrev-ref $refname)
    # upper command puts error when the branch doesn't exist.
    # so far, get the branch name from refname
    branch=${refname#refs/heads/}

    # rsync
    option='-rlpgoDuvcK --size-only'
    #exclude_list=''
    exclude_list='exclude-rsync'
    dryrun='--dry-run'
    #delete=''
    delete='--delete'
    src=./*

    case $branch in
        "develop")
            #TODO 開発機にデプロイ
            #dryrun=''
            nodes=("/home/git/www/192.168.0.144/")
            umask 002
            exit 0
            ;;
        release*)
            #TODO プレビュー
            #dryrun=''
            nodes=("ssh_hoge:/foo/bar/")
            umask 022
            exit 0
            ;;
        hotfix*)
            exit 0
            ;;
        "master" | deployment* )
            # TODO live
            #dryrun=''
            nodes=("ssh_host1:/var/www/html/baz/" "ssh_host2:/var/www/html/baz/")
            umask 002
            exit 0
            ;;
        *)
            # do nothing
            exit 0
            ;;
    esac

    # tmp_checkout_dir
    repo_name=$(basename $(pwd))
    project_name=${repo_name%.*}
    tmp_checkout_dir=~/checkouts/$project_name/$branch

    # clean up
    rm -rf $tmp_checkout_dir

    # found out if the branch was deleted
    git show-ref --verify --quiet $refname
    if [ "$?" = 1 ]; then
        exit 0
    fi

    # checkout
    mkdir -p $tmp_checkout_dir
    env GIT_WORK_TREE=$tmp_checkout_dir git checkout -f $branch
    cd $tmp_checkout_dir

    # change permissions
    permission_777_dirs=("logs/php_error" "logs/app")
    for dir in ${permission_777_dirs[@]}; do
        if [ -e $dir ]; then
            chmod 777 $dir
        fi
    done

    # execute rsync
    for node in ${nodes[@]}; do
        echo
        echo ---------------------------------------
        echo  ${node}
        echo ---------------------------------------
        echo
        rsync $option --exclude-from="$exclude_list" $dryrun $delete $src $node
        echo
    done
done
